package com.jgaap.ui;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JGAAP_UI_MainForm.java
 *
 * Created on Nov 2, 2010, 1:14:56 PM
 */

/**
 *
 * @author Patrick Brennan
 */


//Package Imports
import java.util.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;

import javax.swing.*;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.TreeSelectionModel;
import javax.swing.tree.TreePath;
import javax.swing.table.DefaultTableModel;

import com.jgaap.generics.*;
import com.jgaap.backend.API;
import com.jgaap.backend.CSVIO;

public class JGAAP_UI_MainForm extends javax.swing.JFrame {
	private static final long serialVersionUID = 1L;

    DefaultListModel AnalysisMethodListBox_Model = new DefaultListModel();
    DefaultListModel SelectedAnalysisMethodListBox_Model = new DefaultListModel();
    DefaultListModel CanonicizerListBox_Model = new DefaultListModel();
    DefaultListModel SelectedCanonicizerListBox_Model = new DefaultListModel();
    DefaultListModel EventCullingListBox_Model = new DefaultListModel();
    DefaultListModel SelectedEventCullingListBox_Model = new DefaultListModel();
    DefaultListModel EventSetsListBox_Model = new DefaultListModel();
    DefaultListModel SelectedEventSetsListBox_Model = new DefaultListModel();

    DefaultComboBoxModel LanguageComboBox_Model = new DefaultComboBoxModel();
    
    DefaultTreeModel KnownAuthorsTree_Model = new DefaultTreeModel(new DefaultMutableTreeNode("Authors"));

    DefaultTableModel UnknownAuthorDocumentsTable_Model = new DefaultTableModel() {
    	private static final long serialVersionUID = 1L;
        @Override
        public boolean isCellEditable(int row, int column) {
            if (column == 0)
            {
                return true;
            }
            else
            {
                return false;
            }
        }
    };
    DefaultTableModel DocumentsTable_Model = new DefaultTableModel() {
    	private static final long serialVersionUID = 1L;
        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };

    API JGAAP_API = new API();

    JFileChooser  FileChoser;
    String filepath = "..";

    List<Canonicizer> CanonicizerMasterList = JGAAP_API.getAllCanonicizers();
    List<EventDriver> EventDriverMasterList = JGAAP_API.getAllEventDrivers();
    List<AnalysisDriver> AnalysisDriverMasterList = JGAAP_API.getAllAnalysisDrivers();
    List<DistanceFunction> DistanceFunctionsMasterList = JGAAP_API.getAllDistanceFunctions();
    List<EventCuller> EventCullersMasterList = JGAAP_API.getAllEventCullers();
    List<Language> LanguagesMasterList = JGAAP_API.getAllLanguages();

    List<EventDriver> SelectedEventDriverList = new ArrayList<EventDriver>();
    List<EventCuller> SelectedEventCullersList = new ArrayList<EventCuller>();
    List<AnalysisDriver> SelectedAnalysisDriverList  = new ArrayList<AnalysisDriver>();
    List<Canonicizer> SelectedCanonicizerList  = new ArrayList<Canonicizer>();
    List<Document> UnknownDocumentList = new ArrayList<Document>();
    List<Document> KnownDocumentList = new ArrayList<Document>();
    List<Document> DocumentList = new ArrayList<Document>();
    List<String> AuthorList = new ArrayList<String>();

    /** Creates new form JGAAP_UI_MainForm */
    public JGAAP_UI_MainForm() {
        initComponents();
        SanatizeMasterLists();
        SetAnalysisMethodList();
        SetCanonicizerList();
        SetEventSetList();
        SetEventCullingList();
        SetUnknownDocumentColumns();
        SetKnownDocumentTree();
        SetDocumentColumns();
        SetLanguagesList();
        SelectedEventDriverList.clear();
        SelectedAnalysisDriverList.clear();
      
       // DefaultMutableTreeNode top = new DefaultMutableTreeNode("The Java Series");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings({ "unchecked", "deprecation" })
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

        JGAAP_TabbedPane = new javax.swing.JTabbedPane();
        JGAAP_DocumentsPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        DocumentsPanel_UnknownAuthorsTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        DocumentsPanel_KnownAuthorsTree = new javax.swing.JTree();
        DocumentsPanel_AddDocumentsButton = new javax.swing.JButton();
        DocumentsPanel_RemoveDocumentsButton = new javax.swing.JButton();
        DocumentsPanel_AddAuthorButton = new javax.swing.JButton();
        DocumentsPanel_EditAuthorButton = new javax.swing.JButton();
        DocumentsPanel_RemoveAuthorButton = new javax.swing.JButton();
        DocumentsPanel_NotesButton = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        DocumentsPanel_LanguageComboBox = new javax.swing.JComboBox();
        JGAAP_CanonicizerPanel = new javax.swing.JPanel();
        CanonicizersPanel_NotesButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        CanonicizersPanel_DocumentsTable = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        CanonicizersPanel_CanonicizerListBox = new javax.swing.JList();
        jScrollPane5 = new javax.swing.JScrollPane();
        CanonicizersPanel_SelectedCanonicizerListBox = new javax.swing.JList();
        CanonicizersPanel_AddCanonicizerButton = new javax.swing.JButton();
        CanonicizersPanel_RemoveCanonicizerButton = new javax.swing.JButton();
        CanonicizersPanel_AddAllCanonicizersButton = new javax.swing.JButton();
        CanonicizersPanel_RemoveAllCanonicizersButton = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        CanonicizersPanel_DocumentsCanonicizerDescriptionTextBox = new javax.swing.JTextArea();
        jScrollPane8 = new javax.swing.JScrollPane();
        CanonicizersPanel_DocumentsCurrentCanonicizersTextBox = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        CanonicizersPanel_SetToDocumentButton = new javax.swing.JButton();
        CanonicizersPanel_SetToDocumentTypeButton = new javax.swing.JButton();
        CanonicizersPanel_SetToAllDocuments = new javax.swing.JButton();
        JGAAP_EventSetsPanel = new javax.swing.JPanel();
        EventSetsPanel_NotesButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        EventSetsPanel_EventSetListBox = new javax.swing.JList();
        jScrollPane10 = new javax.swing.JScrollPane();
        EventSetsPanel_SelectedEventSetListBox = new javax.swing.JList();
        EventSetsPanel_ParametersPanel = new javax.swing.JPanel();
        EventSetsPanel_EventSetCrossSpinner = new javax.swing.JSpinner();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        EventSetsPanel_EventSetDescriptionTextBox = new javax.swing.JTextArea();
        EventSetsPanel_AddEventSetButton = new javax.swing.JButton();
        EventSetsPanel_RemoveEventSetButton = new javax.swing.JButton();
        EventSetsPanel_AddAllEventSetsButton = new javax.swing.JButton();
        EventSetsPanel_RemoveAllEventSetsButton = new javax.swing.JButton();
        JGAAP_EventCullingPanel = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        EventCullingPanel_NotesButton = new javax.swing.JButton();
        jScrollPane14 = new javax.swing.JScrollPane();
        EventCullingPanel_SelectedEventCullingListBox = new javax.swing.JList();
        EventCullingPanel_AddEventCullingButton = new javax.swing.JButton();
        EventCullingPanel_RemoveEventCullingButton = new javax.swing.JButton();
        EventCullingPanel_AddAllEventCullingButton = new javax.swing.JButton();
        EventCullingPanel_RemoveAllEventCullingButton = new javax.swing.JButton();
        EventCullingPanel_ParametersPanel = new javax.swing.JPanel();
        jScrollPane15 = new javax.swing.JScrollPane();
        EventCullingPanel_EventCullingListBox = new javax.swing.JList();
        jScrollPane16 = new javax.swing.JScrollPane();
        EventCullingPanel_EventCullingDescriptionTextbox = new javax.swing.JTextArea();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        EventCullingPanel_EventCullingCrossSpinner = new javax.swing.JSpinner();
        JGAAP_AnalysisMethodPanel = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        AnalysisMethodPanel_NotesButton = new javax.swing.JButton();
        jScrollPane17 = new javax.swing.JScrollPane();
        AnalysisMethodPanel_SelectedAnalysisMethodsListBox = new javax.swing.JList();
        AnalysisMethodPanel_AddAnalysisMethodButton = new javax.swing.JButton();
        AnalysisMethodPanel_RemoveAnalysisMethodsButton = new javax.swing.JButton();
        AnalysisMethodPanel_AddAllAnalysisMethodsButton = new javax.swing.JButton();
        AnalysisMethodPanel_RemoveAllAnalysisMethodsButton = new javax.swing.JButton();
        AnalysisMethodPanel_ParametersPanel = new javax.swing.JPanel();
        jScrollPane18 = new javax.swing.JScrollPane();
        AnalysisMethodPanel_AnalysisMethodsListBox = new javax.swing.JList();
        jLabel28 = new javax.swing.JLabel();
        jScrollPane19 = new javax.swing.JScrollPane();
        AnalysisMethodPanel_AnalysisMethodDescriptionTextBox = new javax.swing.JTextArea();
        JGAAP_ReportingPanel = new javax.swing.JPanel();
        Process_Button = new javax.swing.JButton();
        JGAAP_MenuBar = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        SaveProblemMenuItem = new javax.swing.JMenuItem();
        LoadProblemMenuItem = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        BatchSaveMenuItem = new javax.swing.JMenuItem();
        BatchLoadMenuItem = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenu5 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("JGAAP");

        JGAAP_TabbedPane.setName("JGAAP_TabbedPane"); // NOI18N

        jLabel1.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 24)); // NOI18N
        jLabel1.setText("Unknown Authors");

        jLabel2.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 24)); // NOI18N
        jLabel2.setText("Known Authors");

        DocumentsPanel_UnknownAuthorsTable.setModel(UnknownAuthorDocumentsTable_Model);
        DocumentsPanel_UnknownAuthorsTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        DocumentsPanel_UnknownAuthorsTable.setColumnSelectionAllowed(true);
        DocumentsPanel_UnknownAuthorsTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(DocumentsPanel_UnknownAuthorsTable);
        DocumentsPanel_UnknownAuthorsTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        DocumentsPanel_KnownAuthorsTree.setModel(KnownAuthorsTree_Model);
        DocumentsPanel_KnownAuthorsTree.setShowsRootHandles(true);
        jScrollPane2.setViewportView(DocumentsPanel_KnownAuthorsTree);

        DocumentsPanel_AddDocumentsButton.setText("Add Document");
        DocumentsPanel_AddDocumentsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DocumentsPanel_AddDocumentsButtonActionPerformed(evt);
            }
        });

        DocumentsPanel_RemoveDocumentsButton.setText("Remove Document");
        DocumentsPanel_RemoveDocumentsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DocumentsPanel_RemoveDocumentsButtonActionPerformed(evt);
            }
        });

        DocumentsPanel_AddAuthorButton.setLabel("Add Author");
        DocumentsPanel_AddAuthorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DocumentsPanel_AddAuthorButtonActionPerformed(evt);
            }
        });

        DocumentsPanel_EditAuthorButton.setLabel("Edit Author");
        DocumentsPanel_EditAuthorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DocumentsPanel_EditAuthorButtonActionPerformed(evt);
            }
        });

        DocumentsPanel_RemoveAuthorButton.setLabel("Remove Author");
        DocumentsPanel_RemoveAuthorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DocumentsPanel_RemoveAuthorButtonActionPerformed(evt);
            }
        });

        DocumentsPanel_NotesButton.setLabel("Notes");

        jLabel10.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 24)); // NOI18N
        jLabel10.setText("Language");

        DocumentsPanel_LanguageComboBox.setModel(LanguageComboBox_Model);
        DocumentsPanel_LanguageComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DocumentsPanel_LanguageComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout JGAAP_DocumentsPanelLayout = new javax.swing.GroupLayout(JGAAP_DocumentsPanel);
        JGAAP_DocumentsPanel.setLayout(JGAAP_DocumentsPanelLayout);
        JGAAP_DocumentsPanelLayout.setHorizontalGroup(
            JGAAP_DocumentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JGAAP_DocumentsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JGAAP_DocumentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 805, Short.MAX_VALUE)
                    .addGroup(JGAAP_DocumentsPanelLayout.createSequentialGroup()
                        .addGroup(JGAAP_DocumentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(DocumentsPanel_LanguageComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 637, Short.MAX_VALUE)
                        .addComponent(DocumentsPanel_NotesButton))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 805, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, JGAAP_DocumentsPanelLayout.createSequentialGroup()
                        .addGroup(JGAAP_DocumentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(JGAAP_DocumentsPanelLayout.createSequentialGroup()
                                .addComponent(DocumentsPanel_AddDocumentsButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DocumentsPanel_RemoveDocumentsButton))
                            .addComponent(jLabel2))
                        .addGap(512, 512, 512))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, JGAAP_DocumentsPanelLayout.createSequentialGroup()
                        .addComponent(DocumentsPanel_AddAuthorButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DocumentsPanel_EditAuthorButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DocumentsPanel_RemoveAuthorButton)))
                .addContainerGap())
        );
        JGAAP_DocumentsPanelLayout.setVerticalGroup(
            JGAAP_DocumentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JGAAP_DocumentsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JGAAP_DocumentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DocumentsPanel_NotesButton)
                    .addGroup(JGAAP_DocumentsPanelLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DocumentsPanel_LanguageComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(JGAAP_DocumentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DocumentsPanel_RemoveDocumentsButton)
                    .addComponent(DocumentsPanel_AddDocumentsButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(JGAAP_DocumentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DocumentsPanel_RemoveAuthorButton)
                    .addComponent(DocumentsPanel_EditAuthorButton)
                    .addComponent(DocumentsPanel_AddAuthorButton))
                .addContainerGap())
        );

        JGAAP_TabbedPane.addTab("Documents", JGAAP_DocumentsPanel);

        CanonicizersPanel_NotesButton.setLabel("Notes");
        CanonicizersPanel_NotesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CanonicizersPanel_NotesButtonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 24));
        jLabel3.setText("Documents");

        CanonicizersPanel_DocumentsTable.setModel(DocumentsTable_Model);
        CanonicizersPanel_DocumentsTable.setColumnSelectionAllowed(true);
        CanonicizersPanel_DocumentsTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(CanonicizersPanel_DocumentsTable);
        CanonicizersPanel_DocumentsTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        CanonicizersPanel_CanonicizerListBox.setModel(CanonicizerListBox_Model);
        CanonicizersPanel_CanonicizerListBox.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        CanonicizersPanel_CanonicizerListBox.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                CanonicizersPanel_CanonicizerListBoxMouseMoved(evt);
            }
        });
        jScrollPane4.setViewportView(CanonicizersPanel_CanonicizerListBox);

        CanonicizersPanel_SelectedCanonicizerListBox.setModel(SelectedCanonicizerListBox_Model);
        CanonicizersPanel_SelectedCanonicizerListBox.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        CanonicizersPanel_SelectedCanonicizerListBox.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                CanonicizersPanel_SelectedCanonicizerListBoxMouseMoved(evt);
            }
        });
        jScrollPane5.setViewportView(CanonicizersPanel_SelectedCanonicizerListBox);

        CanonicizersPanel_AddCanonicizerButton.setLabel("+");
        CanonicizersPanel_AddCanonicizerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CanonicizersPanel_AddCanonicizerButtonActionPerformed(evt);
            }
        });

        CanonicizersPanel_RemoveCanonicizerButton.setLabel("-");
        CanonicizersPanel_RemoveCanonicizerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CanonicizersPanel_RemoveCanonicizerButtonActionPerformed(evt);
            }
        });

        CanonicizersPanel_AddAllCanonicizersButton.setText("All");
        CanonicizersPanel_AddAllCanonicizersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CanonicizersPanel_AddAllCanonicizersButtonActionPerformed(evt);
            }
        });

        CanonicizersPanel_RemoveAllCanonicizersButton.setText("Clear");
        CanonicizersPanel_RemoveAllCanonicizersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CanonicizersPanel_RemoveAllCanonicizersButtonActionPerformed(evt);
            }
        });

        CanonicizersPanel_DocumentsCanonicizerDescriptionTextBox.setColumns(20);
        CanonicizersPanel_DocumentsCanonicizerDescriptionTextBox.setRows(5);
        jScrollPane7.setViewportView(CanonicizersPanel_DocumentsCanonicizerDescriptionTextBox);

        CanonicizersPanel_DocumentsCurrentCanonicizersTextBox.setColumns(20);
        CanonicizersPanel_DocumentsCurrentCanonicizersTextBox.setRows(5);
        jScrollPane8.setViewportView(CanonicizersPanel_DocumentsCurrentCanonicizersTextBox);

        jLabel4.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 24));
        jLabel4.setText("Document's Current Canonicizers");

        jLabel5.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 24));
        jLabel5.setText("Canonicizer Description");

        CanonicizersPanel_SetToDocumentButton.setText("Set to Document");
        CanonicizersPanel_SetToDocumentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CanonicizersPanel_SetToDocumentButtonActionPerformed(evt);
            }
        });

        CanonicizersPanel_SetToDocumentTypeButton.setText("Set to Document Type");
        CanonicizersPanel_SetToDocumentTypeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CanonicizersPanel_SetToDocumentTypeButtonActionPerformed(evt);
            }
        });

        CanonicizersPanel_SetToAllDocuments.setText("Set to All Documents");
        CanonicizersPanel_SetToAllDocuments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CanonicizersPanel_SetToAllDocumentsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout JGAAP_CanonicizerPanelLayout = new javax.swing.GroupLayout(JGAAP_CanonicizerPanel);
        JGAAP_CanonicizerPanel.setLayout(JGAAP_CanonicizerPanelLayout);
        JGAAP_CanonicizerPanelLayout.setHorizontalGroup(
            JGAAP_CanonicizerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JGAAP_CanonicizerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JGAAP_CanonicizerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JGAAP_CanonicizerPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(JGAAP_CanonicizerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JGAAP_CanonicizerPanelLayout.createSequentialGroup()
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(JGAAP_CanonicizerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(CanonicizersPanel_RemoveCanonicizerButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(CanonicizersPanel_AddAllCanonicizersButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(CanonicizersPanel_AddCanonicizerButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(CanonicizersPanel_RemoveAllCanonicizersButton, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(JGAAP_CanonicizerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(CanonicizersPanel_SetToDocumentButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(CanonicizersPanel_SetToAllDocuments, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(CanonicizersPanel_SetToDocumentTypeButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(JGAAP_CanonicizerPanelLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 623, Short.MAX_VALUE)
                        .addComponent(CanonicizersPanel_NotesButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JGAAP_CanonicizerPanelLayout.createSequentialGroup()
                        .addGroup(JGAAP_CanonicizerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(JGAAP_CanonicizerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        JGAAP_CanonicizerPanelLayout.setVerticalGroup(
            JGAAP_CanonicizerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JGAAP_CanonicizerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JGAAP_CanonicizerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(CanonicizersPanel_NotesButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(JGAAP_CanonicizerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JGAAP_CanonicizerPanelLayout.createSequentialGroup()
                        .addGroup(JGAAP_CanonicizerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, JGAAP_CanonicizerPanelLayout.createSequentialGroup()
                                .addComponent(CanonicizersPanel_AddCanonicizerButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CanonicizersPanel_RemoveCanonicizerButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CanonicizersPanel_AddAllCanonicizersButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CanonicizersPanel_RemoveAllCanonicizersButton)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CanonicizersPanel_SetToDocumentButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CanonicizersPanel_SetToDocumentTypeButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CanonicizersPanel_SetToAllDocuments)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(JGAAP_CanonicizerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(JGAAP_CanonicizerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane7)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE))
                .addContainerGap())
        );

        JGAAP_TabbedPane.addTab("Canonicizers", JGAAP_CanonicizerPanel);

        EventSetsPanel_NotesButton.setLabel("Notes");

        jLabel6.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 24));
        jLabel6.setText("Event Driver");

        jLabel7.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 24));
        jLabel7.setText("Parameters");

        jLabel8.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 24));
        jLabel8.setText("Event Driver Description");

        jLabel9.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 24));
        jLabel9.setText("Selected ED");

        EventSetsPanel_EventSetListBox.setModel(EventSetsListBox_Model);
        EventSetsPanel_EventSetListBox.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        EventSetsPanel_EventSetListBox.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                EventSetsPanel_EventSetListBoxMouseMoved(evt);
            }
        });
        jScrollPane9.setViewportView(EventSetsPanel_EventSetListBox);

        EventSetsPanel_SelectedEventSetListBox.setModel(SelectedEventSetsListBox_Model);
        EventSetsPanel_SelectedEventSetListBox.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        EventSetsPanel_SelectedEventSetListBox.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                EventSetsPanel_SelectedEventSetListBoxMouseMoved(evt);
            }
        });
        jScrollPane10.setViewportView(EventSetsPanel_SelectedEventSetListBox);

        EventSetsPanel_ParametersPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout EventSetsPanel_ParametersPanelLayout = new javax.swing.GroupLayout(EventSetsPanel_ParametersPanel);
        EventSetsPanel_ParametersPanel.setLayout(EventSetsPanel_ParametersPanelLayout);
        EventSetsPanel_ParametersPanelLayout.setHorizontalGroup(
            EventSetsPanel_ParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 341, Short.MAX_VALUE)
        );
        EventSetsPanel_ParametersPanelLayout.setVerticalGroup(
            EventSetsPanel_ParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 306, Short.MAX_VALUE)
        );

        EventSetsPanel_EventSetCrossSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));

        jLabel14.setText("Maximum number of Event Drivers in a single arrangement:");

        EventSetsPanel_EventSetDescriptionTextBox.setColumns(20);
        EventSetsPanel_EventSetDescriptionTextBox.setRows(5);
        jScrollPane6.setViewportView(EventSetsPanel_EventSetDescriptionTextBox);

        EventSetsPanel_AddEventSetButton.setLabel("+");
        EventSetsPanel_AddEventSetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EventSetsPanel_AddEventSetButtonActionPerformed(evt);
            }
        });

        EventSetsPanel_RemoveEventSetButton.setLabel("-");
        EventSetsPanel_RemoveEventSetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EventSetsPanel_RemoveEventSetButtonActionPerformed(evt);
            }
        });

        EventSetsPanel_AddAllEventSetsButton.setText("All");
        EventSetsPanel_AddAllEventSetsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EventSetsPanel_AddAllEventSetsButtonActionPerformed(evt);
            }
        });

        EventSetsPanel_RemoveAllEventSetsButton.setText("Clear");
        EventSetsPanel_RemoveAllEventSetsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EventSetsPanel_RemoveAllEventSetsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout JGAAP_EventSetsPanelLayout = new javax.swing.GroupLayout(JGAAP_EventSetsPanel);
        JGAAP_EventSetsPanel.setLayout(JGAAP_EventSetsPanelLayout);
        JGAAP_EventSetsPanelLayout.setHorizontalGroup(
            JGAAP_EventSetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JGAAP_EventSetsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JGAAP_EventSetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 805, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JGAAP_EventSetsPanelLayout.createSequentialGroup()
                        .addGroup(JGAAP_EventSetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(JGAAP_EventSetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(JGAAP_EventSetsPanelLayout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                                .addComponent(EventSetsPanel_EventSetCrossSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(EventSetsPanel_ParametersPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(JGAAP_EventSetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(EventSetsPanel_RemoveEventSetButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(EventSetsPanel_AddAllEventSetsButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(EventSetsPanel_AddEventSetButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(EventSetsPanel_RemoveAllEventSetsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(JGAAP_EventSetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(JGAAP_EventSetsPanelLayout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(EventSetsPanel_NotesButton))
                            .addComponent(jScrollPane10, 0, 0, Short.MAX_VALUE))))
                .addContainerGap())
        );
        JGAAP_EventSetsPanelLayout.setVerticalGroup(
            JGAAP_EventSetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JGAAP_EventSetsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JGAAP_EventSetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JGAAP_EventSetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(jLabel9)
                        .addComponent(jLabel7))
                    .addComponent(EventSetsPanel_NotesButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(JGAAP_EventSetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JGAAP_EventSetsPanelLayout.createSequentialGroup()
                        .addGroup(JGAAP_EventSetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(JGAAP_EventSetsPanelLayout.createSequentialGroup()
                                .addComponent(EventSetsPanel_AddEventSetButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(EventSetsPanel_RemoveEventSetButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(EventSetsPanel_AddAllEventSetsButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(EventSetsPanel_RemoveAllEventSetsButton))
                            .addComponent(EventSetsPanel_ParametersPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(JGAAP_EventSetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(EventSetsPanel_EventSetCrossSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        JGAAP_TabbedPane.addTab("Event Drivers", JGAAP_EventSetsPanel);

        jLabel15.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 24));
        jLabel15.setText("Event Culling");

        jLabel16.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 24));
        jLabel16.setText("Parameters");

        jLabel17.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 24));
        jLabel17.setText("Selected EC");

        EventCullingPanel_NotesButton.setLabel("Notes");

        EventCullingPanel_SelectedEventCullingListBox.setModel(SelectedEventCullingListBox_Model);
        EventCullingPanel_SelectedEventCullingListBox.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        EventCullingPanel_SelectedEventCullingListBox.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                EventCullingPanel_SelectedEventCullingListBoxMouseMoved(evt);
            }
        });
        jScrollPane14.setViewportView(EventCullingPanel_SelectedEventCullingListBox);

        EventCullingPanel_AddEventCullingButton.setLabel("+");
        EventCullingPanel_AddEventCullingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EventCullingPanel_AddEventCullingButtonActionPerformed(evt);
            }
        });

        EventCullingPanel_RemoveEventCullingButton.setLabel("-");
        EventCullingPanel_RemoveEventCullingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EventCullingPanel_RemoveEventCullingButtonActionPerformed(evt);
            }
        });

        EventCullingPanel_AddAllEventCullingButton.setText("All");
        EventCullingPanel_AddAllEventCullingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EventCullingPanel_AddAllEventCullingButtonActionPerformed(evt);
            }
        });

        EventCullingPanel_RemoveAllEventCullingButton.setText("Clear");
        EventCullingPanel_RemoveAllEventCullingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EventCullingPanel_RemoveAllEventCullingButtonActionPerformed(evt);
            }
        });

        EventCullingPanel_ParametersPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout EventCullingPanel_ParametersPanelLayout = new javax.swing.GroupLayout(EventCullingPanel_ParametersPanel);
        EventCullingPanel_ParametersPanel.setLayout(EventCullingPanel_ParametersPanelLayout);
        EventCullingPanel_ParametersPanelLayout.setHorizontalGroup(
            EventCullingPanel_ParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 341, Short.MAX_VALUE)
        );
        EventCullingPanel_ParametersPanelLayout.setVerticalGroup(
            EventCullingPanel_ParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 306, Short.MAX_VALUE)
        );

        EventCullingPanel_EventCullingListBox.setModel(EventCullingListBox_Model);
        EventCullingPanel_EventCullingListBox.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        EventCullingPanel_EventCullingListBox.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                EventCullingPanel_EventCullingListBoxMouseMoved(evt);
            }
        });
        jScrollPane15.setViewportView(EventCullingPanel_EventCullingListBox);

        EventCullingPanel_EventCullingDescriptionTextbox.setColumns(20);
        EventCullingPanel_EventCullingDescriptionTextbox.setRows(5);
        jScrollPane16.setViewportView(EventCullingPanel_EventCullingDescriptionTextbox);

        jLabel18.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 24));
        jLabel18.setText("Event Culling Description");

        jLabel19.setText("Maximum number of Event Culling in a single arrangement:");

        EventCullingPanel_EventCullingCrossSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));

        javax.swing.GroupLayout JGAAP_EventCullingPanelLayout = new javax.swing.GroupLayout(JGAAP_EventCullingPanel);
        JGAAP_EventCullingPanel.setLayout(JGAAP_EventCullingPanelLayout);
        JGAAP_EventCullingPanelLayout.setHorizontalGroup(
            JGAAP_EventCullingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JGAAP_EventCullingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JGAAP_EventCullingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane16, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 805, Short.MAX_VALUE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JGAAP_EventCullingPanelLayout.createSequentialGroup()
                        .addGroup(JGAAP_EventCullingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(JGAAP_EventCullingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addGroup(JGAAP_EventCullingPanelLayout.createSequentialGroup()
                                .addComponent(jLabel19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                                .addComponent(EventCullingPanel_EventCullingCrossSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(EventCullingPanel_ParametersPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(6, 6, 6)
                        .addGroup(JGAAP_EventCullingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(EventCullingPanel_RemoveEventCullingButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(EventCullingPanel_AddAllEventCullingButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(EventCullingPanel_AddEventCullingButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(EventCullingPanel_RemoveAllEventCullingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(JGAAP_EventCullingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(JGAAP_EventCullingPanelLayout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(EventCullingPanel_NotesButton))
                            .addComponent(jScrollPane14, 0, 0, Short.MAX_VALUE))))
                .addContainerGap())
        );
        JGAAP_EventCullingPanelLayout.setVerticalGroup(
            JGAAP_EventCullingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JGAAP_EventCullingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JGAAP_EventCullingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JGAAP_EventCullingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel17)
                        .addComponent(jLabel16)
                        .addComponent(jLabel15))
                    .addComponent(EventCullingPanel_NotesButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(JGAAP_EventCullingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JGAAP_EventCullingPanelLayout.createSequentialGroup()
                        .addGroup(JGAAP_EventCullingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane14, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE)
                            .addComponent(jScrollPane15, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JGAAP_EventCullingPanelLayout.createSequentialGroup()
                                .addComponent(EventCullingPanel_ParametersPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(JGAAP_EventCullingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel19)
                                    .addComponent(EventCullingPanel_EventCullingCrossSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel18))
                    .addGroup(JGAAP_EventCullingPanelLayout.createSequentialGroup()
                        .addComponent(EventCullingPanel_AddEventCullingButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(EventCullingPanel_RemoveEventCullingButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(EventCullingPanel_AddAllEventCullingButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(EventCullingPanel_RemoveAllEventCullingButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        JGAAP_TabbedPane.addTab("Event Culling", JGAAP_EventCullingPanel);

        jLabel20.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 24));
        jLabel20.setText("Analysis Methods");

        jLabel21.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 24));
        jLabel21.setText("Parameters");

        jLabel22.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 24));
        jLabel22.setText("Selected AM");

        AnalysisMethodPanel_NotesButton.setLabel("Notes");

        AnalysisMethodPanel_SelectedAnalysisMethodsListBox.setModel(SelectedAnalysisMethodListBox_Model);
        AnalysisMethodPanel_SelectedAnalysisMethodsListBox.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        AnalysisMethodPanel_SelectedAnalysisMethodsListBox.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                AnalysisMethodPanel_SelectedAnalysisMethodsListBoxMouseMoved(evt);
            }
        });
        jScrollPane17.setViewportView(AnalysisMethodPanel_SelectedAnalysisMethodsListBox);

        AnalysisMethodPanel_AddAnalysisMethodButton.setLabel("+");
        AnalysisMethodPanel_AddAnalysisMethodButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnalysisMethodPanel_AddAnalysisMethodButtonActionPerformed(evt);
            }
        });

        AnalysisMethodPanel_RemoveAnalysisMethodsButton.setLabel("-");
        AnalysisMethodPanel_RemoveAnalysisMethodsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnalysisMethodPanel_RemoveAnalysisMethodsButtonActionPerformed(evt);
            }
        });

        AnalysisMethodPanel_AddAllAnalysisMethodsButton.setText("All");
        AnalysisMethodPanel_AddAllAnalysisMethodsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnalysisMethodPanel_AddAllAnalysisMethodsButtonActionPerformed(evt);
            }
        });

        AnalysisMethodPanel_RemoveAllAnalysisMethodsButton.setText("Clear");
        AnalysisMethodPanel_RemoveAllAnalysisMethodsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnalysisMethodPanel_RemoveAllAnalysisMethodsButtonActionPerformed(evt);
            }
        });

        AnalysisMethodPanel_ParametersPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout AnalysisMethodPanel_ParametersPanelLayout = new javax.swing.GroupLayout(AnalysisMethodPanel_ParametersPanel);
        AnalysisMethodPanel_ParametersPanel.setLayout(AnalysisMethodPanel_ParametersPanelLayout);
        AnalysisMethodPanel_ParametersPanelLayout.setHorizontalGroup(
            AnalysisMethodPanel_ParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 330, Short.MAX_VALUE)
        );
        AnalysisMethodPanel_ParametersPanelLayout.setVerticalGroup(
            AnalysisMethodPanel_ParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 332, Short.MAX_VALUE)
        );

        AnalysisMethodPanel_AnalysisMethodsListBox.setModel(AnalysisMethodListBox_Model);
        AnalysisMethodPanel_AnalysisMethodsListBox.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        AnalysisMethodPanel_AnalysisMethodsListBox.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                AnalysisMethodPanel_AnalysisMethodsListBoxMouseMoved(evt);
            }
        });
        jScrollPane18.setViewportView(AnalysisMethodPanel_AnalysisMethodsListBox);

        jLabel28.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 24));
        jLabel28.setText("Analysis Method Description");

        AnalysisMethodPanel_AnalysisMethodDescriptionTextBox.setColumns(20);
        AnalysisMethodPanel_AnalysisMethodDescriptionTextBox.setRows(5);
        jScrollPane19.setViewportView(AnalysisMethodPanel_AnalysisMethodDescriptionTextBox);

        javax.swing.GroupLayout JGAAP_AnalysisMethodPanelLayout = new javax.swing.GroupLayout(JGAAP_AnalysisMethodPanel);
        JGAAP_AnalysisMethodPanel.setLayout(JGAAP_AnalysisMethodPanelLayout);
        JGAAP_AnalysisMethodPanelLayout.setHorizontalGroup(
            JGAAP_AnalysisMethodPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JGAAP_AnalysisMethodPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JGAAP_AnalysisMethodPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane19, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 805, Short.MAX_VALUE)
                    .addComponent(jLabel28, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JGAAP_AnalysisMethodPanelLayout.createSequentialGroup()
                        .addGroup(JGAAP_AnalysisMethodPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane18, 0, 0, Short.MAX_VALUE)
                            .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(JGAAP_AnalysisMethodPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AnalysisMethodPanel_ParametersPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(JGAAP_AnalysisMethodPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(AnalysisMethodPanel_RemoveAnalysisMethodsButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(AnalysisMethodPanel_AddAllAnalysisMethodsButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(AnalysisMethodPanel_AddAnalysisMethodButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(AnalysisMethodPanel_RemoveAllAnalysisMethodsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(JGAAP_AnalysisMethodPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(JGAAP_AnalysisMethodPanelLayout.createSequentialGroup()
                                .addComponent(jLabel22)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(AnalysisMethodPanel_NotesButton))
                            .addComponent(jScrollPane17, 0, 0, Short.MAX_VALUE))))
                .addContainerGap())
        );
        JGAAP_AnalysisMethodPanelLayout.setVerticalGroup(
            JGAAP_AnalysisMethodPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JGAAP_AnalysisMethodPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JGAAP_AnalysisMethodPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JGAAP_AnalysisMethodPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel22)
                        .addComponent(jLabel21)
                        .addComponent(jLabel20))
                    .addComponent(AnalysisMethodPanel_NotesButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(JGAAP_AnalysisMethodPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JGAAP_AnalysisMethodPanelLayout.createSequentialGroup()
                        .addGroup(JGAAP_AnalysisMethodPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AnalysisMethodPanel_ParametersPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane18, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE)
                            .addComponent(jScrollPane17, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel28))
                    .addGroup(JGAAP_AnalysisMethodPanelLayout.createSequentialGroup()
                        .addComponent(AnalysisMethodPanel_AddAnalysisMethodButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AnalysisMethodPanel_RemoveAnalysisMethodsButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AnalysisMethodPanel_AddAllAnalysisMethodsButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AnalysisMethodPanel_RemoveAllAnalysisMethodsButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane19, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        JGAAP_TabbedPane.addTab("Analysis Methods", JGAAP_AnalysisMethodPanel);

        javax.swing.GroupLayout JGAAP_ReportingPanelLayout = new javax.swing.GroupLayout(JGAAP_ReportingPanel);
        JGAAP_ReportingPanel.setLayout(JGAAP_ReportingPanelLayout);
        JGAAP_ReportingPanelLayout.setHorizontalGroup(
            JGAAP_ReportingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 825, Short.MAX_VALUE)
        );
        JGAAP_ReportingPanelLayout.setVerticalGroup(
            JGAAP_ReportingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 533, Short.MAX_VALUE)
        );

        JGAAP_TabbedPane.addTab("Reporting", JGAAP_ReportingPanel);

        Process_Button.setLabel("Process");
        Process_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Process_ButtonActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        SaveProblemMenuItem.setText("Save Problem");
        SaveProblemMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveProblemMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(SaveProblemMenuItem);

        LoadProblemMenuItem.setText("Load Problem");
        LoadProblemMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoadProblemMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(LoadProblemMenuItem);

        jMenu4.setText("Batch Documents");

        BatchSaveMenuItem.setText("Save Documents");
        BatchSaveMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BatchSaveMenuItemActionPerformed(evt);
            }
        });
        jMenu4.add(BatchSaveMenuItem);

        BatchLoadMenuItem.setText("Load Documents");
        BatchLoadMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BatchLoadMenuItemActionPerformed(evt);
            }
        });
        jMenu4.add(BatchLoadMenuItem);

        jMenu1.add(jMenu4);

        jMenu3.setText("Options");

        jMenu5.setText("Default Language");
        jMenu3.add(jMenu5);

        jMenu1.add(jMenu3);

        JGAAP_MenuBar.add(jMenu1);

        jMenu2.setText("Edit");

        jMenuItem3.setText("jMenuItem3");
        jMenu2.add(jMenuItem3);

        jMenuItem4.setText("jMenuItem4");
        jMenu2.add(jMenuItem4);

        JGAAP_MenuBar.add(jMenu2);

        setJMenuBar(JGAAP_MenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(JGAAP_TabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 830, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(386, 386, 386)
                        .addComponent(Process_Button)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(JGAAP_TabbedPane)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Process_Button)
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DocumentsPanel_AddDocumentsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DocumentsPanel_AddDocumentsButtonActionPerformed

        FileChoser = new JFileChooser(filepath);
        FileChoser.setMultiSelectionEnabled(true);
        int choice = FileChoser.showOpenDialog(JGAAP_UI_MainForm.this);
        if (choice == JFileChooser.APPROVE_OPTION)
        {
        	for(File file : FileChoser.getSelectedFiles()){
	            try 
	            {
	                JGAAP_API.addDocument(file.getCanonicalPath(), "","");
	                filepath = file.getCanonicalPath();
	            }
	            catch (Exception e)
	            {
	            	//TODO: add error dialog here 
	            }
	            UpdateUnknownDocumentsTable();
        	}
        }
}//GEN-LAST:event_DocumentsPanel_AddDocumentsButtonActionPerformed

    private void CanonicizersPanel_NotesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CanonicizersPanel_NotesButtonActionPerformed

        
    }//GEN-LAST:event_CanonicizersPanel_NotesButtonActionPerformed

    private void AnalysisMethodPanel_AddAnalysisMethodButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnalysisMethodPanel_AddAnalysisMethodButtonActionPerformed
        try{
            JGAAP_API.addAnalysisDriver(AnalysisMethodPanel_AnalysisMethodsListBox.getSelectedValue().toString());
            UpdateSelectedAnalysisMethodListBox();
        }
        catch (Exception e){
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_AnalysisMethodPanel_AddAnalysisMethodButtonActionPerformed

    private void EventSetsPanel_AddEventSetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EventSetsPanel_AddEventSetButtonActionPerformed
        try{
            JGAAP_API.addEventDriver(EventSetsPanel_EventSetListBox.getSelectedValue().toString());
            UpdateSelectedEventSetListBox();
        }
        catch (Exception e){
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_EventSetsPanel_AddEventSetButtonActionPerformed

    private void CanonicizersPanel_AddCanonicizerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CanonicizersPanel_AddCanonicizerButtonActionPerformed
        try{
            for (int i = 0; i < CanonicizerMasterList.size(); i++){
                if (CanonicizerMasterList.get(i).displayName().equals(CanonicizersPanel_CanonicizerListBox.getSelectedValue().toString())){
                    Canonicizer temp = CanonicizerMasterList.get(i).getClass().newInstance();
                    SelectedCanonicizerList.add(temp);
                    UpdateSelectedCanonicizerListBox();
                }
            }
        }
        catch (Exception e){
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_CanonicizersPanel_AddCanonicizerButtonActionPerformed

    private void CanonicizersPanel_RemoveCanonicizerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CanonicizersPanel_RemoveCanonicizerButtonActionPerformed
        SelectedCanonicizerList.remove(CanonicizersPanel_SelectedCanonicizerListBox.getSelectedIndex());
        UpdateSelectedCanonicizerListBox();
    }//GEN-LAST:event_CanonicizersPanel_RemoveCanonicizerButtonActionPerformed

    private void CanonicizersPanel_AddAllCanonicizersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CanonicizersPanel_AddAllCanonicizersButtonActionPerformed
        try{
            for (int i = 0; i < CanonicizerMasterList.size(); i++){
                Canonicizer temp = CanonicizerMasterList.get(i).getClass().newInstance();
                SelectedCanonicizerList.add(temp);
            }
            UpdateSelectedCanonicizerListBox();
        }
        catch (Exception e){
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_CanonicizersPanel_AddAllCanonicizersButtonActionPerformed

    private void CanonicizersPanel_RemoveAllCanonicizersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CanonicizersPanel_RemoveAllCanonicizersButtonActionPerformed
        SelectedCanonicizerList.clear();
        UpdateSelectedCanonicizerListBox();
    }//GEN-LAST:event_CanonicizersPanel_RemoveAllCanonicizersButtonActionPerformed

    private void EventSetsPanel_RemoveEventSetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EventSetsPanel_RemoveEventSetButtonActionPerformed
        SelectedEventDriverList = JGAAP_API.getEventDrivers();
        JGAAP_API.removeEventDriver(SelectedEventDriverList.get(EventSetsPanel_SelectedEventSetListBox.getSelectedIndex()));
        UpdateSelectedEventSetListBox();
    }//GEN-LAST:event_EventSetsPanel_RemoveEventSetButtonActionPerformed

    private void EventSetsPanel_AddAllEventSetsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EventSetsPanel_AddAllEventSetsButtonActionPerformed
        try{
            for (int i = 0; i < EventDriverMasterList.size(); i++)
            {
                JGAAP_API.addEventDriver(EventDriverMasterList.get(i).displayName());
            }
            UpdateSelectedEventSetListBox();
        }
        catch (Exception e){
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_EventSetsPanel_AddAllEventSetsButtonActionPerformed

    private void EventSetsPanel_RemoveAllEventSetsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EventSetsPanel_RemoveAllEventSetsButtonActionPerformed
        JGAAP_API.removeAllEventDrivers();
        UpdateSelectedEventSetListBox();
    }//GEN-LAST:event_EventSetsPanel_RemoveAllEventSetsButtonActionPerformed

    private void AnalysisMethodPanel_RemoveAnalysisMethodsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnalysisMethodPanel_RemoveAnalysisMethodsButtonActionPerformed
        SelectedAnalysisDriverList = JGAAP_API.getAnalysisDrivers();
        JGAAP_API.removeAnalysisDriver(SelectedAnalysisDriverList.get(AnalysisMethodPanel_SelectedAnalysisMethodsListBox.getSelectedIndex()));
        UpdateSelectedAnalysisMethodListBox();
    }//GEN-LAST:event_AnalysisMethodPanel_RemoveAnalysisMethodsButtonActionPerformed

    private void AnalysisMethodPanel_AddAllAnalysisMethodsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnalysisMethodPanel_AddAllAnalysisMethodsButtonActionPerformed
        try{
            for (int i = 0; i < AnalysisDriverMasterList.size(); i++)
            {
                JGAAP_API.addAnalysisDriver(AnalysisDriverMasterList.get(i).displayName());
            }
            UpdateSelectedAnalysisMethodListBox();
        }
        catch (Exception e){
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_AnalysisMethodPanel_AddAllAnalysisMethodsButtonActionPerformed

    private void AnalysisMethodPanel_RemoveAllAnalysisMethodsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnalysisMethodPanel_RemoveAllAnalysisMethodsButtonActionPerformed
        JGAAP_API.removeAllAnalysisDrivers();
        UpdateSelectedAnalysisMethodListBox();
    }//GEN-LAST:event_AnalysisMethodPanel_RemoveAllAnalysisMethodsButtonActionPerformed

    private void AnalysisMethodPanel_SelectedAnalysisMethodsListBoxMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AnalysisMethodPanel_SelectedAnalysisMethodsListBoxMouseMoved
        JList theList = (JList) evt.getSource();
        int index = theList.locationToIndex(evt.getPoint());
        if (index > -1) {
            String text = SelectedAnalysisDriverList.get(index).tooltipText();
            theList.setToolTipText(text);
        }
    }//GEN-LAST:event_AnalysisMethodPanel_SelectedAnalysisMethodsListBoxMouseMoved

    private void AnalysisMethodPanel_AnalysisMethodsListBoxMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AnalysisMethodPanel_AnalysisMethodsListBoxMouseMoved
        JList theList = (JList) evt.getSource();
        int index = theList.locationToIndex(evt.getPoint());
        if (index > -1) {
            if (index < AnalysisDriverMasterList.size())
            {
                String text = AnalysisDriverMasterList.get(index).tooltipText();
                theList.setToolTipText(text);
            }
            else
            {
                String text = DistanceFunctionsMasterList.get(index - AnalysisDriverMasterList.size()).tooltipText();
                theList.setToolTipText(text);
            }
        }
    }//GEN-LAST:event_AnalysisMethodPanel_AnalysisMethodsListBoxMouseMoved

    private void CanonicizersPanel_CanonicizerListBoxMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CanonicizersPanel_CanonicizerListBoxMouseMoved
        JList theList = (JList) evt.getSource();
        int index = theList.locationToIndex(evt.getPoint());
        if (index > -1) {
            String text = CanonicizerMasterList.get(index).tooltipText();
            theList.setToolTipText(text);
        }
    }//GEN-LAST:event_CanonicizersPanel_CanonicizerListBoxMouseMoved

    private void CanonicizersPanel_SelectedCanonicizerListBoxMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CanonicizersPanel_SelectedCanonicizerListBoxMouseMoved
        JList theList = (JList) evt.getSource();
        int index = theList.locationToIndex(evt.getPoint());
        if (index > -1) {
            String text = SelectedCanonicizerList.get(index).tooltipText();
            theList.setToolTipText(text);
        }
    }//GEN-LAST:event_CanonicizersPanel_SelectedCanonicizerListBoxMouseMoved

    private void EventSetsPanel_EventSetListBoxMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EventSetsPanel_EventSetListBoxMouseMoved
        JList theList = (JList) evt.getSource();
        int index = theList.locationToIndex(evt.getPoint());
        if (index > -1) {
            String text = EventDriverMasterList.get(index).tooltipText();
            theList.setToolTipText(text);
        }
    }//GEN-LAST:event_EventSetsPanel_EventSetListBoxMouseMoved

    private void EventSetsPanel_SelectedEventSetListBoxMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EventSetsPanel_SelectedEventSetListBoxMouseMoved
        JList theList = (JList) evt.getSource();
        int index = theList.locationToIndex(evt.getPoint());
        if (index > -1) {
            String text = SelectedEventDriverList.get(index).tooltipText();
            theList.setToolTipText(text);
        }
    }//GEN-LAST:event_EventSetsPanel_SelectedEventSetListBoxMouseMoved

    private void EventCullingPanel_EventCullingListBoxMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EventCullingPanel_EventCullingListBoxMouseMoved
        JList theList = (JList) evt.getSource();
        int index = theList.locationToIndex(evt.getPoint());
        if (index > -1) {
            String text = EventCullersMasterList.get(index).tooltipText();
            theList.setToolTipText(text);
        }
    }//GEN-LAST:event_EventCullingPanel_EventCullingListBoxMouseMoved

    private void EventCullingPanel_SelectedEventCullingListBoxMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EventCullingPanel_SelectedEventCullingListBoxMouseMoved
        JList theList = (JList) evt.getSource();
        int index = theList.locationToIndex(evt.getPoint());
        if (index > -1) {
            String text = SelectedEventCullersList.get(index).tooltipText();
            theList.setToolTipText(text);
        }
    }//GEN-LAST:event_EventCullingPanel_SelectedEventCullingListBoxMouseMoved

    private void DocumentsPanel_RemoveDocumentsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DocumentsPanel_RemoveDocumentsButtonActionPerformed
        UnknownDocumentList = JGAAP_API.getUnknownDocuments();
        JGAAP_API.removeDocument(UnknownDocumentList.get(DocumentsPanel_UnknownAuthorsTable.getSelectedRow()));
        UpdateUnknownDocumentsTable();
    }//GEN-LAST:event_DocumentsPanel_RemoveDocumentsButtonActionPerformed

    private void DocumentsPanel_AddAuthorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DocumentsPanel_AddAuthorButtonActionPerformed
        JGAAP_UI_AddAuthorDialog  AddAuthorDialog= new JGAAP_UI_AddAuthorDialog(JGAAP_UI_MainForm.this, true, JGAAP_API,"",filepath);
        AddAuthorDialog.setVisible(true);
        filepath = AddAuthorDialog.getFilePath();
        UpdateKnownDocumentsTree();
    }//GEN-LAST:event_DocumentsPanel_AddAuthorButtonActionPerformed

    private void DocumentsPanel_EditAuthorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DocumentsPanel_EditAuthorButtonActionPerformed
        TreePath Path = DocumentsPanel_KnownAuthorsTree.getSelectionPath();
        String AuthorName;
        if(Path.getPathCount() != 1)
        {
            AuthorName = Path.getPathComponent(1).toString();
            JGAAP_UI_AddAuthorDialog  AddAuthorDialog= new JGAAP_UI_AddAuthorDialog(JGAAP_UI_MainForm.this, true, JGAAP_API, AuthorName, filepath);
            AddAuthorDialog.setVisible(true);
            UpdateKnownDocumentsTree();
        }
        else
        {

        }

    }//GEN-LAST:event_DocumentsPanel_EditAuthorButtonActionPerformed

    private void DocumentsPanel_RemoveAuthorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DocumentsPanel_RemoveAuthorButtonActionPerformed
        TreePath Path = DocumentsPanel_KnownAuthorsTree.getSelectionPath();
        String AuthorName;
        if(Path.getPathCount() != 1)
        {
            AuthorName = Path.getPathComponent(1).toString();
            KnownDocumentList = JGAAP_API.getDocumentsByAuthor(AuthorName);
            for (int i = KnownDocumentList.size() - 1; i >= 0; i--)
            {
                JGAAP_API.removeDocument(KnownDocumentList.get(i));
            }
            UpdateKnownDocumentsTree();
        }
        else
        {

        }

    }//GEN-LAST:event_DocumentsPanel_RemoveAuthorButtonActionPerformed

    private void CanonicizersPanel_SetToDocumentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CanonicizersPanel_SetToDocumentButtonActionPerformed
        int row = CanonicizersPanel_DocumentsTable.getSelectedRow();
        if (row >= 0)
        {
            DocumentList = JGAAP_API.getDocuments();
            Document temp = DocumentList.get(row);
            temp.clearCanonicizers();
            for (int i = 0; i < SelectedCanonicizerList.size(); i++)
            {
                try
                {
                    JGAAP_API.addCanonicizer(SelectedCanonicizerList.get(i).displayName(),temp);
                }
                catch (Exception e)
                {
                }
            }
            UpdateCurrentCanonicizerBox();
        }
    }//GEN-LAST:event_CanonicizersPanel_SetToDocumentButtonActionPerformed

    private void CanonicizersPanel_SetToDocumentTypeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CanonicizersPanel_SetToDocumentTypeButtonActionPerformed
        int row = CanonicizersPanel_DocumentsTable.getSelectedRow();
        if (row >= 0)
        {
            DocumentList = JGAAP_API.getDocuments();
            Document temp = DocumentList.get(row);
            temp.clearCanonicizers();
            for (int i = 0; i < SelectedCanonicizerList.size(); i++)
            {
                try
                {
                    JGAAP_API.addCanonicizer(SelectedCanonicizerList.get(i).displayName(),temp);
                }
                catch (Exception e)
                {
                }
            }
            UpdateCurrentCanonicizerBox();
        }
    }//GEN-LAST:event_CanonicizersPanel_SetToDocumentTypeButtonActionPerformed

    private void CanonicizersPanel_SetToAllDocumentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CanonicizersPanel_SetToAllDocumentsActionPerformed
        JGAAP_API.removeAllCanonicizers();
        for (int i = 0; i < SelectedCanonicizerList.size(); i++)
            {
                try
                {
                   JGAAP_API.addCanonicizer(SelectedCanonicizerList.get(i).displayName());
                }
                catch (Exception e)
                {
                }
            }
        UpdateCurrentCanonicizerBox();
    }//GEN-LAST:event_CanonicizersPanel_SetToAllDocumentsActionPerformed

    private void Process_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Process_ButtonActionPerformed
        try {
            JGAAP_API.clearResults();
            JGAAP_API.execute();
            List<Document> unknowns = JGAAP_API.getUnknownDocuments();
            StringBuffer buffer = new StringBuffer();
            for (Document unknown : unknowns) {
                buffer.append(unknown.getResult());
            }
            JGAAP_UI_ResultsDialog ResultsPage = new JGAAP_UI_ResultsDialog(JGAAP_UI_MainForm.this, true);
            ResultsPage.DisplayResults(buffer.toString());
            ResultsPage.setVisible(true);
        } catch (Exception e){
        }
    }//GEN-LAST:event_Process_ButtonActionPerformed

    private void EventCullingPanel_AddEventCullingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EventCullingPanel_AddEventCullingButtonActionPerformed
        try{
            JGAAP_API.addEventCuller(EventCullingPanel_EventCullingListBox.getSelectedValue().toString());
            UpdateSelectedEventCullingListBox();
        }
        catch (Exception e){
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_EventCullingPanel_AddEventCullingButtonActionPerformed

    private void EventCullingPanel_RemoveEventCullingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EventCullingPanel_RemoveEventCullingButtonActionPerformed
        SelectedEventCullersList = JGAAP_API.getEventCullers();
        JGAAP_API.removeEventCuller(SelectedEventCullersList.get(EventCullingPanel_SelectedEventCullingListBox.getSelectedIndex()));
        UpdateSelectedEventCullingListBox();
    }//GEN-LAST:event_EventCullingPanel_RemoveEventCullingButtonActionPerformed

    private void EventCullingPanel_AddAllEventCullingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EventCullingPanel_AddAllEventCullingButtonActionPerformed
        try{
            for (int i = 0; i < EventCullersMasterList.size(); i++)
            {
                JGAAP_API.addEventCuller(EventCullersMasterList.get(i).displayName());
            }
            UpdateSelectedEventCullingListBox();
        }
        catch (Exception e){
            System.out.println(e.getMessage());
        }        // TODO add your handling code here:
    }//GEN-LAST:event_EventCullingPanel_AddAllEventCullingButtonActionPerformed

    private void EventCullingPanel_RemoveAllEventCullingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EventCullingPanel_RemoveAllEventCullingButtonActionPerformed
        JGAAP_API.removeAllEventCullers();
        UpdateSelectedEventCullingListBox();
    }//GEN-LAST:event_EventCullingPanel_RemoveAllEventCullingButtonActionPerformed

    private void SaveProblemMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveProblemMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SaveProblemMenuItemActionPerformed

    private void LoadProblemMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoadProblemMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LoadProblemMenuItemActionPerformed

    private void BatchLoadMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BatchLoadMenuItemActionPerformed
        FileChoser = new JFileChooser(filepath);
        int choice = FileChoser.showOpenDialog(JGAAP_UI_MainForm.this);
        if (choice == JFileChooser.APPROVE_OPTION)
        {
            try
            {
                filepath = FileChoser.getSelectedFile().getCanonicalPath();
                List<List<String>> DocumentCSVs = CSVIO.readCSV(filepath);
                for (int i = 0; i < DocumentCSVs.size(); i++)
                {
                	JGAAP_API.addDocument(DocumentCSVs.get(i).get(1),DocumentCSVs.get(i).get(0),(DocumentCSVs.get(i).size()>2?DocumentCSVs.get(i).get(2):null));
                }
                UpdateKnownDocumentsTree();
                UpdateUnknownDocumentsTable();
            }
            catch (Exception e)
            {

            }
        }
    }//GEN-LAST:event_BatchLoadMenuItemActionPerformed

    private void BatchSaveMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BatchSaveMenuItemActionPerformed
        FileChoser = new JFileChooser(filepath);
        int choice = FileChoser.showOpenDialog(JGAAP_UI_MainForm.this);
        if (choice == JFileChooser.APPROVE_OPTION)
        {
            try 
            {
                filepath = FileChoser.getSelectedFile().getCanonicalPath();
                Vector<Vector<String>> DocumentCSVs = new Vector<Vector<String>>();
                DocumentList = JGAAP_API.getDocuments();
                for (int i = 0; i < DocumentList.size(); i++)
                {
                    Vector<String> doc = new Vector<String>();
                    doc.add(DocumentList.get(i).getTitle());
                    doc.add(DocumentList.get(i).getFilePath());
                    if (DocumentList.get(i).getAuthor() != null)
                    {
                        doc.add(DocumentList.get(i).getAuthor());
                    }
                    else
                    {
                        doc.add("");
                    }
                    DocumentCSVs.add(doc);
                }
                CSVIO.writeCSV(DocumentCSVs, filepath);
            }
            catch (Exception e)
            {

            }
        }
    }//GEN-LAST:event_BatchSaveMenuItemActionPerformed

    private void DocumentsPanel_LanguageComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DocumentsPanel_LanguageComboBoxActionPerformed
        try
        {
            JGAAP_API.setLanguage(DocumentsPanel_LanguageComboBox.getSelectedItem().toString());
        }
        catch (Exception e)
        {

        }
    }//GEN-LAST:event_DocumentsPanel_LanguageComboBoxActionPerformed

    private void UpdateSelectedAnalysisMethodListBox()
    {
        SelectedAnalysisMethodListBox_Model.clear();
        SelectedAnalysisDriverList = JGAAP_API.getAnalysisDrivers();
        for (int i = 0; i < SelectedAnalysisDriverList.size(); i++)
        {
            SelectedAnalysisMethodListBox_Model.addElement(SelectedAnalysisDriverList.get(i).displayName());
        }
    }

    private void UpdateSelectedEventSetListBox()
    {
        SelectedEventSetsListBox_Model.clear();
        SelectedEventDriverList = JGAAP_API.getEventDrivers();
        for (int i = 0; i < SelectedEventDriverList.size(); i++)
        {
            SelectedEventSetsListBox_Model.addElement(SelectedEventDriverList.get(i).displayName());
        }
    }

    private void UpdateSelectedEventCullingListBox()
    {
        SelectedEventCullingListBox_Model.clear();
        SelectedEventCullersList = JGAAP_API.getEventCullers();
        for (int i = 0; i < SelectedEventCullersList.size(); i++)
        {
            SelectedEventCullingListBox_Model.addElement(SelectedEventCullersList.get(i).displayName());
        }
    }

    private void UpdateSelectedCanonicizerListBox() {
        SelectedCanonicizerListBox_Model.clear();
        for (int i = 0; i < SelectedCanonicizerList.size(); i++)
        {
            SelectedCanonicizerListBox_Model.addElement(SelectedCanonicizerList.get(i).displayName());
        }
}

    private void UpdateUnknownDocumentsTable() {
        UnknownAuthorDocumentsTable_Model.setRowCount(0);
        UnknownDocumentList = JGAAP_API.getUnknownDocuments();
        for (int i = 0; i < UnknownDocumentList.size(); i++)
        {
            Object RowData[] = {UnknownDocumentList.get(i).getTitle(), UnknownDocumentList.get(i).getFilePath()};
            UnknownAuthorDocumentsTable_Model.addRow(RowData);
        }
        UpdateDocumentsTable();
}

    private void UpdateKnownDocumentsTree() {
        DefaultMutableTreeNode root = (DefaultMutableTreeNode) KnownAuthorsTree_Model.getRoot();
        for (int i = root.getChildCount() - 1; i >= 0; i--)
        {
            KnownAuthorsTree_Model.removeNodeFromParent((DefaultMutableTreeNode)root.getChildAt(i));
        }
        AuthorList = JGAAP_API.getAuthors();
        for (int i = 0; i < AuthorList.size(); i++)
        {
            String AuthorName = AuthorList.get(i);
            DefaultMutableTreeNode author = new DefaultMutableTreeNode(AuthorName);
            KnownAuthorsTree_Model.insertNodeInto(author, root, i);
            //root.add(author);
            KnownDocumentList = JGAAP_API.getDocumentsByAuthor(AuthorName);
            for (int j = 0; j < KnownDocumentList.size(); j++)
            {
                //author.add(new DefaultMutableTreeNode(KnownDocumentList.get(j).getTitle() + " - " + KnownDocumentList.get(j).getFilePath()));
                DefaultMutableTreeNode temp = new DefaultMutableTreeNode(KnownDocumentList.get(j).getTitle() + " - " + KnownDocumentList.get(j).getFilePath());
                KnownAuthorsTree_Model.insertNodeInto(temp, author, j);
            }
        }

        UpdateDocumentsTable();
}

    private void UpdateDocumentsTable() {
        DocumentsTable_Model.setRowCount(0);
        DocumentList = JGAAP_API.getDocuments();
        for (int i = 0; i < DocumentList.size(); i++)
        {
            Object RowData[] = {DocumentList.get(i).getTitle(), DocumentList.get(i).isAuthorKnown(), DocumentList.get(i).getAuthor(), DocumentList.get(i).getDocType()};
            DocumentsTable_Model.addRow(RowData);
        }
}

    private void UpdateCurrentCanonicizerBox() {
        int row = CanonicizersPanel_DocumentsTable.getSelectedRow();
        if (row >= 0)
        {
            DocumentList = JGAAP_API.getDocuments();
            List<Canonicizer> tempList = DocumentList.get(row).getCanonicizers();
            String tempString = "";
            for (int i = 0; i < tempList.size(); i++)
            {
                tempString = tempString + tempList.get(i).displayName() + "\r\n";
            }
            CanonicizersPanel_DocumentsCurrentCanonicizersTextBox.setText(tempString);
        }
}


    private void SanatizeMasterLists() {
        for (int i = AnalysisDriverMasterList.size() - 1; i >= 0; i--)
        {
            if (!AnalysisDriverMasterList.get(i).showInGUI())
            {
                AnalysisDriverMasterList.remove(i);
            }

        }

        for (int i = CanonicizerMasterList.size() - 1; i >= 0; i--)
        {
            if (!CanonicizerMasterList.get(i).showInGUI())
            {
                CanonicizerMasterList.remove(i);
            }

        }

        for (int i = EventDriverMasterList.size() - 1; i >= 0; i--)
        {
            if (!EventDriverMasterList.get(i).showInGUI())
            {
                EventDriverMasterList.remove(i);
            }

        }

        for (int i = EventCullersMasterList.size() - 1; i >= 0; i--)
        {
            if (!EventCullersMasterList.get(i).showInGUI())
            {
                EventCullersMasterList.remove(i);
            }

        }

        for (int i = DistanceFunctionsMasterList.size() - 1; i >= 0; i--)
        {
            if (!DistanceFunctionsMasterList.get(i).showInGUI())
            {
                DistanceFunctionsMasterList.remove(i);
            }

        }

        for (int i = LanguagesMasterList.size() - 1; i >= 0; i--)
        {
            if (!LanguagesMasterList.get(i).showInGUI())
            {
                LanguagesMasterList.remove(i);
            }

        }
}

    private void SetAnalysisMethodList() {
        for (int i = 0; i < AnalysisDriverMasterList.size(); i++)
        {
            AnalysisMethodListBox_Model.addElement(AnalysisDriverMasterList.get(i).displayName());
        }
        for (int i = 0; i < DistanceFunctionsMasterList.size(); i++)
        {
            AnalysisMethodListBox_Model.addElement(DistanceFunctionsMasterList.get(i).displayName());
        }
}

    private void SetCanonicizerList() {
        for (int i = 0; i < CanonicizerMasterList.size(); i++)
        {
            CanonicizerListBox_Model.addElement(CanonicizerMasterList.get(i).displayName());
        }
}

    private void SetEventCullingList() {
        for (int i = 0; i < EventCullersMasterList.size(); i++)
        {
            EventCullingListBox_Model.addElement(EventCullersMasterList.get(i).displayName());
        }
}

    private void SetLanguagesList() {
        int englishIndex = -1;
        for (int i = 0; i < LanguagesMasterList.size(); i++)
        {
            LanguageComboBox_Model.addElement(LanguagesMasterList.get(i).displayName());
            if (LanguagesMasterList.get(i).displayName().equalsIgnoreCase("English"))
            {
                englishIndex = i;
            }

        }
        if (englishIndex > -1)
        {
            DocumentsPanel_LanguageComboBox.setSelectedIndex(englishIndex);
        }

}

    private void SetEventSetList() {
        for (int i = 0; i < EventDriverMasterList.size(); i++)
        {
            EventSetsListBox_Model.addElement(EventDriverMasterList.get(i).displayName());
        }
}

    private void SetUnknownDocumentColumns() {
        UnknownAuthorDocumentsTable_Model.addColumn("Title");
        UnknownAuthorDocumentsTable_Model.addColumn("Filepath");
        DocumentsPanel_UnknownAuthorsTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        DocumentsPanel_UnknownAuthorsTable.setColumnSelectionAllowed(false);
        DocumentsPanel_UnknownAuthorsTable.setRowSelectionAllowed(true);
        
        DocumentsPanel_UnknownAuthorsTable.getModel().addTableModelListener(new TableModelListener() {
            public void tableChanged(TableModelEvent e)
            {
                System.out.println("Unknown Documents Table Row: " + e.getFirstRow() + ", Column: " + e.getColumn());
                if ((e.getColumn() >= 0) && (e.getFirstRow() >= 0))
                {
                    UnknownDocumentList = JGAAP_API.getUnknownDocuments();
                    if (e.getColumn() == 0)
                    {
                        UnknownDocumentList.get(e.getFirstRow()).setTitle((String)DocumentsPanel_UnknownAuthorsTable.getValueAt(e.getFirstRow(), 0));
                    }
                    UpdateDocumentsTable();
                }
            }
        });
}

    private void SetKnownDocumentTree() {
        DocumentsPanel_KnownAuthorsTree.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
        DocumentsPanel_KnownAuthorsTree.setShowsRootHandles(true);
}

    private void SetDocumentColumns() {
        DocumentsTable_Model.addColumn("Title");
        DocumentsTable_Model.addColumn("Known");
        DocumentsTable_Model.addColumn("Author");
        DocumentsTable_Model.addColumn("Doc Type");

        CanonicizersPanel_DocumentsTable.setColumnSelectionAllowed(false);
        CanonicizersPanel_DocumentsTable.setRowSelectionAllowed(true);

         CanonicizersPanel_DocumentsTable.addMouseListener(new MouseAdapter() {
                public void mouseClicked(MouseEvent e)
                {
                    UpdateCurrentCanonicizerBox();
                }
            });
}

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JGAAP_UI_MainForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AnalysisMethodPanel_AddAllAnalysisMethodsButton;
    private javax.swing.JButton AnalysisMethodPanel_AddAnalysisMethodButton;
    private javax.swing.JTextArea AnalysisMethodPanel_AnalysisMethodDescriptionTextBox;
    private javax.swing.JList AnalysisMethodPanel_AnalysisMethodsListBox;
    private javax.swing.JButton AnalysisMethodPanel_NotesButton;
    private javax.swing.JPanel AnalysisMethodPanel_ParametersPanel;
    private javax.swing.JButton AnalysisMethodPanel_RemoveAllAnalysisMethodsButton;
    private javax.swing.JButton AnalysisMethodPanel_RemoveAnalysisMethodsButton;
    private javax.swing.JList AnalysisMethodPanel_SelectedAnalysisMethodsListBox;
    private javax.swing.JMenuItem BatchLoadMenuItem;
    private javax.swing.JMenuItem BatchSaveMenuItem;
    private javax.swing.JButton CanonicizersPanel_AddAllCanonicizersButton;
    private javax.swing.JButton CanonicizersPanel_AddCanonicizerButton;
    private javax.swing.JList CanonicizersPanel_CanonicizerListBox;
    private javax.swing.JTextArea CanonicizersPanel_DocumentsCanonicizerDescriptionTextBox;
    private javax.swing.JTextArea CanonicizersPanel_DocumentsCurrentCanonicizersTextBox;
    private javax.swing.JTable CanonicizersPanel_DocumentsTable;
    private javax.swing.JButton CanonicizersPanel_NotesButton;
    private javax.swing.JButton CanonicizersPanel_RemoveAllCanonicizersButton;
    private javax.swing.JButton CanonicizersPanel_RemoveCanonicizerButton;
    private javax.swing.JList CanonicizersPanel_SelectedCanonicizerListBox;
    private javax.swing.JButton CanonicizersPanel_SetToAllDocuments;
    private javax.swing.JButton CanonicizersPanel_SetToDocumentButton;
    private javax.swing.JButton CanonicizersPanel_SetToDocumentTypeButton;
    private javax.swing.JButton DocumentsPanel_AddAuthorButton;
    private javax.swing.JButton DocumentsPanel_AddDocumentsButton;
    private javax.swing.JButton DocumentsPanel_EditAuthorButton;
    private javax.swing.JTree DocumentsPanel_KnownAuthorsTree;
    private javax.swing.JComboBox DocumentsPanel_LanguageComboBox;
    private javax.swing.JButton DocumentsPanel_NotesButton;
    private javax.swing.JButton DocumentsPanel_RemoveAuthorButton;
    private javax.swing.JButton DocumentsPanel_RemoveDocumentsButton;
    private javax.swing.JTable DocumentsPanel_UnknownAuthorsTable;
    private javax.swing.JButton EventCullingPanel_AddAllEventCullingButton;
    private javax.swing.JButton EventCullingPanel_AddEventCullingButton;
    private javax.swing.JSpinner EventCullingPanel_EventCullingCrossSpinner;
    private javax.swing.JTextArea EventCullingPanel_EventCullingDescriptionTextbox;
    private javax.swing.JList EventCullingPanel_EventCullingListBox;
    private javax.swing.JButton EventCullingPanel_NotesButton;
    private javax.swing.JPanel EventCullingPanel_ParametersPanel;
    private javax.swing.JButton EventCullingPanel_RemoveAllEventCullingButton;
    private javax.swing.JButton EventCullingPanel_RemoveEventCullingButton;
    private javax.swing.JList EventCullingPanel_SelectedEventCullingListBox;
    private javax.swing.JButton EventSetsPanel_AddAllEventSetsButton;
    private javax.swing.JButton EventSetsPanel_AddEventSetButton;
    private javax.swing.JSpinner EventSetsPanel_EventSetCrossSpinner;
    private javax.swing.JTextArea EventSetsPanel_EventSetDescriptionTextBox;
    private javax.swing.JList EventSetsPanel_EventSetListBox;
    private javax.swing.JButton EventSetsPanel_NotesButton;
    private javax.swing.JPanel EventSetsPanel_ParametersPanel;
    private javax.swing.JButton EventSetsPanel_RemoveAllEventSetsButton;
    private javax.swing.JButton EventSetsPanel_RemoveEventSetButton;
    private javax.swing.JList EventSetsPanel_SelectedEventSetListBox;
    private javax.swing.JPanel JGAAP_AnalysisMethodPanel;
    private javax.swing.JPanel JGAAP_CanonicizerPanel;
    private javax.swing.JPanel JGAAP_DocumentsPanel;
    private javax.swing.JPanel JGAAP_EventCullingPanel;
    private javax.swing.JPanel JGAAP_EventSetsPanel;
    private javax.swing.JMenuBar JGAAP_MenuBar;
    private javax.swing.JPanel JGAAP_ReportingPanel;
    private javax.swing.JTabbedPane JGAAP_TabbedPane;
    private javax.swing.JMenuItem LoadProblemMenuItem;
    private javax.swing.JButton Process_Button;
    private javax.swing.JMenuItem SaveProblemMenuItem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane18;
    private javax.swing.JScrollPane jScrollPane19;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    // End of variables declaration//GEN-END:variables

}